<?xml version="1.0" encoding="utf-8"?>
<project name="OpenVV"
		basedir="."
		default="compile-all">

	<property environment="env"/>
	<property name="FLEX_HOME" value="${env.FLEX_HOME}"/>

	<property name="src.dir" value="src" />
	<property name="bin.dir" value="bin" />
	<property name="tmp.dir" value="tmp" />
	<property name="asdoc.dir" value="asdoc" />

	<condition property="uglifyjs" value="uglifyjs.cmd" else="uglifyjs">
		<os family="windows"/>
	</condition>

	<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>

	<target name="compile-all" depends="clean, compile-beacon, compile-lib"/>
		
	<target name="sign-version">
		<sequential>
			<echo>Signing build with version: ${build.version}</echo>
			<delete file="${src.dir}/org/openvv/OVVVersion.as" />
			<filter token="version" value="${build.version}" />
			<copy file="util/Version.as.template" toFile="${src.dir}/org/openvv/OVVVersion.as" filtering="true" />
		</sequential>
	</target>

	<target name="minify-js">
		<mkdir dir="${tmp.dir}"/>
		<exec executable="${uglifyjs}">
			<arg path="${src.dir}/org/openvv/js/OVVAsset.js"/>
			<arg value="-o"/>
			<arg path="${tmp.dir}/OVVAsset.min.js"/>
			<arg value="-c"/>
			<arg value="-m"/>
			<arg value="evaluate=false"/>
		</exec>
	</target>

	<target name="compile-beacon" depends="check-env, sign-version">
		<mxmlc file="${src.dir}/org/openvv/OVVBeacon.as"
			   output="${bin.dir}/OVVBeacon.swf"
			   static-rsls="true">
			<source-path path-element="${src.dir}"/>
		</mxmlc>
	</target>

	<target name="compile-lib" depends="check-env, sign-version, minify-js">
		<!-- Copy the entire source tree to temp dir so we can alter the source code -->
		<copy todir="${tmp.dir}">
			<fileset dir="${src.dir}"/>
		</copy>
		<!-- Store the minified JS code (which was already under temp) in js-src -->
		<loadfile property="js-src" srcfile="${tmp.dir}/OVVAsset.min.js"/>
		<!-- Escape the minified JS code -->
		<loadresource property="js-src-esc">
			<propertyresource name="js-src"/>
			<filterchain>
				<tokenfilter>
					<filetokenizer/>
					<replacestring from="&quot;" to="\&quot;"/>
				</tokenfilter>
			</filterchain>
		</loadresource>
		<!-- Store the escaped and minified JS code in OVVAsset -->
	 	<replace file="${tmp.dir}/org/openvv/OVVAsset.as" token="{{OVVAssetJS}}" value="${js-src-esc}" />
	 	<!-- Time to compile! -->
		<compc output="${bin.dir}/openvv.swc"
			   include-classes="org.openvv.OVVAsset org.openvv.OVV_TM_Asset org.openvv.OVVCheck org.openvv.OVVRenderMeter org.openvv.OVVThrottleType org.openvv.events.OVVEvent net.iab.IVPAID net.iab.VPAIDEvent org.openvv.OVVVersion">
			<source-path path-element="${tmp.dir}"/>
		</compc>
		<!-- Remove the temp dir -->
		<delete dir="${tmp.dir}" failonerror="false"/>
	</target>

	<target name="compile-doc" depends="check-env, sign-version">
		<asdoc output="${asdoc.dir}" lenient="true" failonerror="true"> 
			<doc-sources path-element="${src.dir}" />
		</asdoc>
	</target>

	<target name="clean">
		<delete file="${src.dir}/org/openvv/OVVVersion.as" failonerror="false" />
		<delete dir="${bin.dir}" failonerror="false" />
		<delete dir="${asdoc.dir}" failonerror="false" />
	</target>

	<target name="check-env">
		<echo>Value of FLEX_HOME is ${FLEX_HOME}</echo>
		<fail message="You must set the FLEX_HOME environment variable to your SDK's home directory">
			<condition>
				<not>
					<isset property="env.FLEX_HOME"/>
				</not>
			</condition>
		</fail>
		<echo>UglifyJS will be invoked as ${uglifyjs}</echo>
		<fail message="Could not find ${uglifyjs} in your PATH! Please get node.js and run `npm i -g uglify-js`">
			<condition>
				<not>
					<available file="${uglifyjs}" filepath="${env.PATH}${path.separator}${env.Path}${path.separator}${env.path}"/>
				</not>
			</condition>
		</fail>
	</target>
</project>
